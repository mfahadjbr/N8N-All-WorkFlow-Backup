{
  "createdAt": "2025-10-17T02:43:07.046Z",
  "updatedAt": "2025-10-17T02:43:07.046Z",
  "id": "ldO66IoSvXG8fNvP",
  "name": "sora 2 UGC Generator",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "4222f077-eedc-4f35-b20b-40e406500831",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1600,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "api_token",
              "name": "replicate_api_token",
              "type": "string",
              "value": "=YOUR_REPLICATE_API_KEY"
            },
            {
              "id": "e743e552-bf98-47bd-a510-14e32b4d85ab",
              "name": "OPENAI_API_TOKE",
              "value": "YOUR_OPENAI_API_KEY",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3c703449-4a70-4298-9515-96c882f44a97",
      "name": "Set API Token",
      "type": "n8n-nodes-base.set",
      "position": [
        -1232,
        80
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "amount": 5,
        "unit": "seconds"
      },
      "id": "1d07d08c-8529-4092-a7d7-a590be05a3d2",
      "name": "Wait 5s",
      "type": "n8n-nodes-base.wait",
      "position": [
        -336,
        96
      ],
      "webhookId": "995d4d71-efe0-4ba6-8c74-d203adedf9b3",
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://api.replicate.com/v1/predictions/{{ $('Create Video').item.json.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set API Token').item.json.replicate_api_token }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "1ec06d0f-25bc-4741-80ca-0ff0c2a5a105",
      "name": "Check Status",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -144,
        96
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "c93d7ba1-0ef9-4087-aa10-389cb2a2c6bd",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.status }}",
              "rightValue": "succeeded"
            }
          ]
        },
        "options": {}
      },
      "id": "0db496a9-bc07-4a44-a7f9-2533c5c47f78",
      "name": "Is Complete?",
      "type": "n8n-nodes-base.if",
      "position": [
        96,
        16
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "d1bfd044-3a07-4c18-b55f-72d192596139",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.status }}",
              "rightValue": "failed"
            }
          ]
        },
        "options": {}
      },
      "id": "3d24cc6c-1eb9-4884-a760-2d902397c2ec",
      "name": "Has Failed?",
      "type": "n8n-nodes-base.if",
      "position": [
        352,
        144
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success-response",
              "name": "response",
              "type": "object",
              "value": "={{ { success: true, result_url: $json.output, prediction_id: $json.id, status: $json.status, message: 'Other generated successfully' } }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3d9d982e-441e-4e4b-99ce-a01318ada813",
      "name": "Success Response",
      "type": "n8n-nodes-base.set",
      "position": [
        336,
        -96
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-response",
              "name": "response",
              "type": "object",
              "value": "={{ { success: false, error: $json.error || 'Other generation failed', prediction_id: $json.id, status: $json.status, message: 'Failed to generate other' } }}"
            }
          ]
        },
        "options": {}
      },
      "id": "33dc0e85-c41e-4e85-89cf-705956ada665",
      "name": "Error Response",
      "type": "n8n-nodes-base.set",
      "position": [
        848,
        368
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "final-result",
              "name": "final_result",
              "type": "object",
              "value": "={{ $json.response }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9da43698-4451-410b-a975-8983f428b9ad",
      "name": "Display Result",
      "type": "n8n-nodes-base.set",
      "position": [
        1152,
        48
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "jsCode": "// Log generation details for monitoring\nconst data = $input.all()[0].json;\n\nconsole.log('digitalhera/heranathalie Request:', {\n  timestamp: new Date().toISOString(),\n  prediction_id: data.id,\n  model_type: 'other'\n});\n\nreturn $input.all();"
      },
      "id": "a8c6f639-9359-405d-967a-ec815e770023",
      "name": "Log Request",
      "type": "n8n-nodes-base.code",
      "position": [
        -336,
        -96
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "=======================================\n        IMAGE TO VIDEO GENERATOR\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n\nüöÄ Need a scalable solution for generating \n   and automating media buying?\n   Check out ROASPIG.com\n=======================================",
        "height": 432,
        "width": 804,
        "color": 4
      },
      "id": "7add1af1-1639-446a-bab5-ded96771b388",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2528,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### üé¨ SORA-2 TEXT-TO-VIDEO WORKFLOW\n\nüî• **Replicate API + n8n automation**\n\n**Model**\n- Owner: `openai`\n- Model: `sora-2` (text ‚Üí video)\n- Endpoint: `https://api.replicate.com/v1/models/openai/sora-2/predictions`\n\n**What it does:**  \nTurns a text prompt into a short video.  \nPerfect for rapid ad creative iteration.\n\n---\n\n### üß© Required Input\n\n- `prompt` *(string)* ‚Äì describe the scene and motion  \n- `seconds` *(int)* ‚Äì 4, 8, or 12\n- Seed image\n\n- `aspect_ratio`: `\"landscape\"`\n- `openai_api_key`: forwarded to model\n\n---\n\n### üîÅ Workflow Steps\n\n1. Manual Trigger  \n2. Set API Token  \n3. Add Prompt & Seconds  \n4. Create Video (POST)  \n5. Log Request  \n6. Wait 5s  \n7. Check Status  \n8. If `succeeded` ‚Üí ‚úÖ Success Response  \n9. If `failed` ‚Üí ‚ùå Error Response  \n10. Else ‚Üí Wait 90s ‚Üí Check Status (loop)\n\n---\n\n### üì§ Success Output\n\n```json\n{\n  \"success\": true,\n  \"result_url\": \"...\",\n  \"prediction_id\": \"...\",\n  \"status\": \"succeeded\",\n  \"message\": \"Video generated successfully\"\n}\n```\n\n---\n\n### üõ†Ô∏è Tips\n\n- Keep prompts JSON-safe (single line).\n- Be specific about motion and camera.\n- Shorter videos test faster and cheaper.\n- Use n8n Credentials for keys.\n- Monitor usage and billing on Replicate.\n\n---\n\n",
        "height": 1958,
        "width": 589,
        "color": 4
      },
      "id": "9d644c3c-173f-4808-8973-a902aca61f92",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2496,
        416
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/openai/sora-2/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set API Token').item.json.replicate_api_token }}"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"input\": {\n    \"prompt\": \"{{ $json.Prompt }}\",\n    \"seconds\":{{ $json['seconds (4,8 or 12)'] }} ,\n    \"aspect_ratio\": \"landscape\",\n    \"openai_api_key\": \"{{ $('Set API Token').item.json.OPENAI_API_TOKE }}\"\n  }\n} ",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "55037fef-f22c-48c8-90ff-4b9c1b7abcb1",
      "name": "Create Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -672,
        80
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "content": "Add Your Replicate API and OpenAI api key",
        "height": 416
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1296,
        -16
      ],
      "id": "f5a30a02-4dcb-42bd-9362-4fa97d70a3c4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "1- Add a link to your Seed image. If you dont have one, you can generate it using OpenAI or Nano Banana. Make sure the image is 1280x720\n\n\n\n\n",
        "height": 336
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -992,
        -48
      ],
      "id": "e5e67bb0-0264-4450-9f7d-6d2b04094cab",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "\n\n## üìù **PROMPT WRITING GUIDELINES**\n\n### ‚ùå **AVOID These Characters:**\n- Double quotes (`\"`) - Will break JSON parsing\n- Backslashes (`\\`) - Can cause escape sequence issues\n- Line breaks/Enter key - Makes JSON invalid\n",
        "height": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -992,
        304
      ],
      "id": "5a47bb31-ad06-46ac-8662-be6b61b886a1",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1504,
        1200
      ],
      "id": "114e6c41-9cc7-4edd-a38c-04cbd55bff49",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "Connect this node to your storage in order to save the predictions\n",
        "height": 432
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1104,
        -80
      ],
      "id": "9ba55598-0156-4cf5-a4b0-c3995c573fe0",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Batch Processing Guide\n\n## üîÑ Optional: Generate Multiple Videos\n\nConnect the \"Batch Process Videos\" node after \"Set API Token\" for bulk generation.\n\n### Three Options:\n\n**Option 1: Same Image + Same Prompt = Multiple Videos**\n- Get different variations from identical inputs\n- Example: 1 product photo ‚Üí 5 unique videos\n\n**Option 2: Same Image + Different Prompts = Multiple Videos**\n- Test different animations on one image  \n- Example: 1 photo with 10 different prompts\n\n**Option 3: Different Images + Different Prompts = Multiple Videos**\n- Bulk create unique content\n- Example: 50 products, each with custom prompt",
        "height": 752,
        "width": 544
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1792,
        656
      ],
      "id": "cedaefd5-d3f8-4f62-aa48-986238096d58",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "amount": 90,
        "unit": "seconds"
      },
      "id": "632f45f6-d12c-4746-883d-752bef849b59",
      "name": "Wait 90s",
      "type": "n8n-nodes-base.wait",
      "position": [
        224,
        352
      ],
      "webhookId": "2e60a799-64fd-49ce-8a21-e69ab2568e0f",
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "924b6590-46a4-4ad5-b58d-0804991c633e",
              "name": "Seed_image",
              "value": "https://replicate.delivery/pbxt/NllgibhEDDtjRmPSLSDvXnkiobQCJDeoI4PwWdJ0bdXIeZbP/AG1_1.png",
              "type": "string"
            },
            {
              "id": "76ad3bd8-da89-413b-b5ab-f031d4d221f4",
              "name": "Prompt",
              "value": "5-Second AG1 'Game Changer' Video Prompt Scene Setup: Woman in modern kitchen (white cropped hoodie, olive green leggings), holding AG1 package with both hands at chest level, green smoothie in blender visible to the side Action (0-5 seconds): 0-1 sec: Start with her looking down at the AG1 package 1-2 sec: She looks up at camera with growing smile (like discovering something amazing) 2-4 sec: Holds package up slightly higher, direct eye contact: 'This is an absolute GAME changer!' 4-5 sec: Quick confident nod while bringing package back to chest level, maintaining smile Camera: Static shot or very subtle push-in Frame from waist up (like reference photo) Bright, natural lighting Kitchen background slightly blurred for focus on her and product Energy: Authentic excitement, like she's sharing a secret with her best friend - natural, not overly polished",
              "type": "string"
            },
            {
              "id": "c88da8c2-ccb0-4325-9aed-6ed9e1d4fd13",
              "name": "seconds (4,8 or 12)",
              "value": 4,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -928,
        96
      ],
      "id": "7ecae603-fc80-4d9e-a087-6c502ab99860",
      "name": "Add Seed Image, Prompt and amount of seconds"
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Set API Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set API Token": {
      "main": [
        [
          {
            "node": "Add Seed Image, Prompt and amount of seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5s": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Is Complete?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Complete?": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Has Failed?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Failed?": {
      "main": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 90s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Display Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Response": {
      "main": [
        [
          {
            "node": "Display Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Request": {
      "main": [
        [
          {
            "node": "Wait 5s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Video": {
      "main": [
        [
          {
            "node": "Log Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 90s": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Seed Image, Prompt and amount of seconds": {
      "main": [
        [
          {
            "node": "Create Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "251062c1-07b9-4168-b2bb-9b771f317f5d",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-17T02:43:07.046Z",
      "updatedAt": "2025-10-17T02:43:07.046Z",
      "role": "workflow:owner",
      "workflowId": "ldO66IoSvXG8fNvP",
      "projectId": "X5HfRiTZREe3eBAa"
    }
  ],
  "tags": []
}